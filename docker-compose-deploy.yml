version: '3'
services:
  db:
    restart: always
    volumes:
      - ./database/mysql:/var/lib/mysql
      - ./database/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    image: mysql:5.7
    ports:
       - "3606:3606"
    environment:
      MYSQL_ROOT_PASSWORD: 'Waves6_'
      MYSQL_DATABASE: 'logistica'
      MYSQL_USER: 'tcero'
      MYSQL_PASSWORD: 'Waves6_'
    networks:
      - backend  
  backend:
    restart: always
    build:
      context: backend # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service 
      MYSQL_DATABASE: logistica  
      MYSQL_HOST: db
      MYSQL_PASS: Waves6_
      MYSQL_PORT: '3306'
      MYSQL_USER: tcero
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend
  frontend:
    restart: always
    build: 
      context: frontend # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://127.0.0.1:8080
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - frontend  

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:    